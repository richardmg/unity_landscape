1.
- Environment will consist of objects that are flat, but that can have several layers
    E.g a cow would have body, legs, perhaps eyes / ears as separate layers
- Each layer should ideally have a uniform thickness (like a card board)
- Objects are inclined to face the camera sideways / billboarded at a distance.
    - Static objects like trees will do this in the shader, and when billboarded, consist
        of one layer.
    - Dynamic objects should perhaps billboard from script, perhaps by walking in a 
        "natural" way so they end up posing so.

2.
- Still flat objects, but buildt up with cubes to give some depth.
    The player can draw new limbs and pieces in a pixel editor
    Or perhaps you cannot draw limbs yourself, but need to harwest
    species / plants from the world, and combine / mate them.
    The world must then consist of a rich fauna of material.

- You somehow need to catch
    a species before you can "mate" with it. And perhaps that you then can
    choose how the new children should evolve.
- Crippled versions of the species you
    have added to world will come and haunt at night.

3.
- Pearly
- There is no game, only about creating a fantasy world
- The user is creating everything with pearls 2D.
- This way, the card boards get natural depth. All pearls are billboarded.
- The pearl "D editor, you choose what kind of piece you will create (head
  eye, leg, arm, tree, wall, flower, wing).
- The piece 3D editor lets you assemple all pieces freely into a creature or building
  - the species and constructions will then be added in a shared world
  on the net for everyone to explore. Perhaps the whole land you created
  can be instered somehow.

4. Flat objects with some depth (plates)
    - You are in a clearing in a forest.
    - you can take down a tree to get plates (e.g 2 per tree)
    - a tree will only contain static plates, so you can only build static constructions with them
        but freely draw / change the default plate drawing.
    - animals living in the forest can also be captures, and will give more advanced plates to
        build with (head, legs, torso, eyes etc). The further in to the forest you go, the bigger
        or more interresting animals / plants you will find.
    - beasts also live in the forest, but never comes out in the clearing (which grows bigger as
        the user harwest trees). Or, they only comes out some meters out of the clearing.
    - Make the daylight darker when entering the forrest. Creatures will have shining eyes.
    - The more trees around the user, the darker the light. The user can create new clearings in
        the forrest.
    - the beasts will try to catch your species and mutate with them into ugly twisted versions.
    - an important point will be why the user should be tempted to go out into the forrest, and
        why he would need to create species etc.

5. New name: Biota (or Fauna, Flora)
    - The point is to that you play a farmer that creates a biota
            following your own imagination. It should end up
            balanced somehow, so it will evolve into humanoid
            species and animals. You start off with small organisms
            like worms and flowers.
       - The player will need to collect organisms of the same
            kind and place them inside fencing. That way they will
            start to breed. The higher the number of organisms, the
            faster the breeding rate (up till a point where too many
            will make them die out). You will need to feed
            them to make them breed, to hinder too many breeding spots
            at the same time. This also means that a you need to
            select what kind of food / nutrition an organism need
            upfront. It can be plants or animals. If too many organisms
            rely on the same food, the food will die out and will
            therefore be hard to collect. Food with many generations
            will be better for breeding than unbred types.
       - An organsim evolve through an upgrade system. An upgrade can
            be to add or remove two genes, or resize and repaint
            two existing onces.
       - When new organisms evolve, they will not be placed back into
            fencing. Instead they are spread
            out to the world again for him to collect. The old organisms
            will continue to breed inside the fencing, but they can only
            still only produce permutations with the same number of
            quads / genes as before. If you want the organism to get more
            and more genes, you will have to breed the onces that
            got an upgrade.
       - The farmer can only have a fixed amount of fencing going at
            the same time. The longer you have been playing, perhaps
            the more fencing you will get.
       - New type decendants will replace old ones, but at least two
            generations will exist at the same time. If the same
            organism is bred in two different fencing, they will
            produce two different branches. In that case, they will
            not replace each other, and in effect, the farmer can
            leave one branch as-is.
       - After an organism has passed a certain amount of generations
            (inside fencing), the player will be allowed to upgrade
            them with new quads or resize / repaint a couple of existing
            onces / exchange existing quads to something more advanced.
            The latter can e.g be exchange 4 genes into a leg, or 8
            genes into a head. An organism with legs but no head will
            move randomly without purpose. The opposite
            will also be true; having a head but no legs will make you
            look like a fancy flower.
            The size of the quads can be of a certain (small)
            size each time to not change too much on the organism. After
            the change, the organism will be spread out in the world.
        - Each gene has a hand-drawn quad in addition to some characteristics.
            It has a type (leg, head, arm etc), strength, move speed
            good-bad scale.
        - There can also be malicious permutations of the species you
            create in the forrest (but not in the clearing). So the farmer
            needs to be careful when harvesting organisms. And also
            what kind of organisms he breed.
        - Harvested / captured organisms can be ridden and controlled
            (in addition to put inside fencing).
            That way you can move faster (based on the organism), and
            also makes it meaningful to breed some attacking skills.
        - You harvest / capture an organsim by being able to ride it.
            And to ride it you need to run after it and jump onto it, or
            jump from the organims you already ride.
        - Bonus: The game is about evolution, and includes no killing.
        - Like the idea before, you create all oranisms using quads (called
            genes?).
            You can perhaps only use as many quads as the organism
            has from before, which is controlled by evolution. Some
            quads are earmarked as legs, others as head etc. This is
            what basically controlles what you can create at any point
            in time during the game. When organisms breed, random
            quads from each organism is combined into a new organism
            of the combined types (in case of hybrid organisms).
            The normal permutation ends up with the same amount of
            quads that one of the organisms had from before. But also
            sometimes more, other times less. For each quad, keep a
            count of how many generations it has survived. A long
            survival ratio will make it more inclined to be a part
            of new permutations.

       - Genes are implemented using voxel volumes, since it will just
            look better and more convincing. The main body and head
            can have a depth between 0 and e.g 10, but limbs etc can
            only have a depth between 0 and 1.
            This makes them easy to quickly
            reduce quality, since then all limbs can easily be quads
            on some distance. Worst case if fps drops, body and head
            can be reduced to quad arrays, with one quad per depth.
            The most advances organisms can have e.g up to 10 - 15
            genes. The ones you start with can e.g have 2 - 4 (flowers
            trees, etc).

            All genes can be scaled both up and down (but without
            adding more voxels). This way you can make small flowers
            and bees etc.

       - Random permutations / monsters of the organisms bred will
            be be placed in the forrest, and are likely to attack.
            permutations occur in the world. Perhaps this can be the
            monsters that you meet, which attack you.

       - Populate the forrest with small and big creatures, from beatles
            and flies and up. The user can either choose to put two
            different organsims together to let them mutate, or two
            of the the same kind to allow it to evolve (that is, the
            player can draw new genes etc). A combination could then
            be that you first mutate interresting organisms (a flower
            and a turtle). Then you go searching and harwesting a
            number of the permutations, and try to evolve / change
            them further.

        - Technical:
            - Pass effective height from script to better utilize gradient
            - Check if I can apply gradient only if the result is going in the same direction
                as lightning, and skip otherwise
            - Calculate effective size for objects, and limit shading range to it.
            - Collapse two adjacent cubes along y-axis in a single object into one.
            - In each cube, for each vertex on either bottom left or top right, add
                a color number telling in which direction opaque pixels can be found in
                all directions around the cube. A color value should be either -1 or 1.
                Other "unused" vertices uses the number 0. When a triangle is interpolated, only
                the dominant corner will be used, and I should be able to read out if a
                color value is above or below 0.
