Name: Biota (or Fauna, Flora)

1.
- Environment will consist of objects that are flat, but that can have several layers
    E.g a cow would have body, legs, perhaps eyes / ears as separate layers
- Each layer should ideally have a uniform thickness (like a card board)
- Objects are inclined to face the camera sideways / billboarded at a distance.
    - Static objects like trees will do this in the shader, and when billboarded, consist
        of one layer.
    - Dynamic objects should perhaps billboard from script, perhaps by walking in a 
        "natural" way so they end up posing so.

2.
- Still flat objects, but buildt up with cubes to give some depth.
    The player can draw new limbs and pieces in a pixel editor
    Or perhaps you cannot draw limbs yourself, but need to harwest
    species / plants from the world, and combine / mate them.
    The world must then consist of a rich fauna of material.

- You somehow need to catch
    a species before you can "mate" with it. And perhaps that you then can
    choose how the new children should evolve.
- Crippled versions of the species you
    have added to world will come and haunt at night.

Game v.0
---------------
- Pearly
- There is no game, only about creating a fantasy world
- The user is creating everything with pearls 2D.
- This way, the card boards get natural depth. All pearls are billboarded.
- The pearl "D editor, you choose what kind of piece you will create (head
  eye, leg, arm, tree, wall, flower, wing).
- The piece 3D editor lets you assemple all pieces freely into a creature or building
  - the species and constructions will then be added in a shared world
  on the net for everyone to explore. Perhaps the whole land you created
  can be instered somehow.

4. Flat objects with some depth (plates)
    - You are in a clearing in a forest.
    - you can take down a tree to get plates (e.g 2 per tree)
    - a tree will only contain static plates, so you can only build static constructions with them
        but freely draw / change the default plate drawing.
    - animals living in the forest can also be captures, and will give more advanced plates to
        build with (head, legs, torso, eyes etc). The further in to the forest you go, the bigger
        or more interresting animals / plants you will find.
    - beasts also live in the forest, but never comes out in the clearing (which grows bigger as
        the user harwest trees). Or, they only comes out some meters out of the clearing.
    - Make the daylight darker when entering the forrest. Creatures will have shining eyes.
    - The more trees around the user, the darker the light. The user can create new clearings in
        the forrest.
    - the beasts will try to catch your species and mutate with them into ugly twisted versions.
    - an important point will be why the user should be tempted to go out into the forrest, and
        why he would need to create species etc.

Game v.1:
--------------
    - The point is to that you play a farmer that creates a biota
            following your own imagination. It should end up
            balanced somehow, so it will evolve into humanoid
            species and animals. You start off with small organisms
            like worms and flowers.
       - The player will need to collect organisms of the same
            kind and place them inside fencing. That way they will
            start to breed. The higher the number of organisms, the
            faster the breeding rate (up till a point where too many
            will make them die out). You will need to feed
            them to make them breed, to hinder too many breeding spots
            at the same time. This also means that a you need to
            select what kind of food / nutrition an organism need
            upfront. It can be plants or animals. If too many organisms
            rely on the same food, the food will die out and will
            therefore be hard to collect. Food with many generations
            will be better for breeding than unbred types.
       - An organsim evolve through an upgrade system. An upgrade can
            be to add or remove two genes, or resize and repaint
            two existing onces.
       - When new organisms evolve, they will not be placed back into
            fencing. Instead they are spread
            out to the world again for him to collect. The old organisms
            will continue to breed inside the fencing, but they can only
            still only produce permutations with the same number of
            quads / genes as before. If you want the organism to get more
            and more genes, you will have to breed the onces that
            got an upgrade.
       - The farmer can only have a fixed amount of fencing going at
            the same time. The longer you have been playing, perhaps
            the more fencing you will get.
       - New type decendants will replace old ones, but at least two
            generations will exist at the same time. If the same
            organism is bred in two different fencing, they will
            produce two different branches. In that case, they will
            not replace each other, and in effect, the farmer can
            leave one branch as-is.
       - After an organism has passed a certain amount of generations
            (inside fencing), the player will be allowed to upgrade
            them with new quads or resize / repaint a couple of existing
            onces / exchange existing quads to something more advanced.
            The latter can e.g be exchange 4 genes into a leg, or 8
            genes into a head. An organism with legs but no head will
            move randomly without purpose. The opposite
            will also be true; having a head but no legs will make you
            look like a fancy flower.
            The size of the quads can be of a certain (small)
            size each time to not change too much on the organism. After
            the change, the organism will be spread out in the world.
        - Each gene has a hand-drawn quad in addition to some characteristics.
            It has a type (leg, head, arm etc), strength, move speed
            good-bad scale.
        - There can also be malicious permutations of the species you
            create in the forrest (but not in the clearing). So the farmer
            needs to be careful when harvesting organisms. And also
            what kind of organisms he breed.
        - Harvested / captured organisms can be ridden and controlled
            (in addition to put inside fencing).
            That way you can move faster (based on the organism), and
            also makes it meaningful to breed some attacking skills.
        - You harvest / capture an organsim by being able to ride it.
            And to ride it you need to run after it and jump onto it, or
            jump from the organims you already ride.
        - Bonus: The game is about evolution, and includes no killing.
        - Like the idea before, you create all oranisms using quads (called
            genes?).
            You can perhaps only use as many quads as the organism
            has from before, which is controlled by evolution. Some
            quads are earmarked as legs, others as head etc. This is
            what basically controlles what you can create at any point
            in time during the game. When organisms breed, random
            quads from each organism is combined into a new organism
            of the combined types (in case of hybrid organisms).
            The normal permutation ends up with the same amount of
            quads that one of the organisms had from before. But also
            sometimes more, other times less. For each quad, keep a
            count of how many generations it has survived. A long
            survival ratio will make it more inclined to be a part
            of new permutations.

       - Genes are implemented using voxel volumes, since it will just
            look better and more convincing. The main body and head
            can have a depth between 0 and e.g 10, but limbs etc can
            only have a depth between 0 and 1.
            This makes them easy to quickly
            reduce quality, since then all limbs can easily be quads
            on some distance. Worst case if fps drops, body and head
            can be reduced to quad arrays, with one quad per depth.
            The most advances organisms can have e.g up to 10 - 15
            genes. The ones you start with can e.g have 2 - 4 (flowers
            trees, etc).

            All genes can be scaled both up and down (but without
            adding more voxels). This way you can make small flowers
            and bees etc.

       - Random permutations / monsters of the organisms bred will
            be be placed in the forrest, and are likely to attack.
            permutations occur in the world. Perhaps this can be the
            monsters that you meet, which attack you.

       - Populate the forrest with small and big creatures, from beatles
            and flies and up. The user can either choose to put two
            different organsims together to let them mutate, or two
            of the the same kind to allow it to evolve (that is, the
            player can draw new genes etc). A combination could then
            be that you first mutate interresting organisms (a flower
            and a turtle). Then you go searching and harwesting a
            number of the permutations, and try to evolve / change
            them further.
       - Cool effect: In the dark, draw species using (almost) gray
            tones, but light them up (as if the moon makes them shine), to
            e.g makes the eyes shine etc.

Game v.2
---------------
    - Instead of evolution, you create an ecosystem
    - The user can draw whatever organism he wants based on blueprints (e.g all kinds of
        animals, vegation, humans, cars, etc. Perhaps I can come up with a
        way to let the user create his own blueprints later, or perhaps combine
        them, like "add wings, add legs, add head" etc. So in the end, a blueprint
        is nothing more than either a collection of other blueprints, or a
        single drawing. Perhaps it can be level based, so when you reach a
        certain level, you have access to more blueprints (advances could be
         wheels, humans, planes etc).
    - The blueprints are basically a set of papers the user will have to draw
        one by one, that will automatically be assembled into an organism.
    - For each organism, you will need to specify what it eats, how big it
        is, and how fast it movesi (even for grass / flowers). Based on this, we
        can calculate how much it needs to eat every day.
        Additionally, he can give the
        species a personallity, like hostile - friendly, introvert - extrovert,
        curious - layedback.
    - It is therefore important that the world contains enough food for an
        organism to survive. And here lies the point of the game; to create
        a balanced eco system that the player can continue to grow. Based
        on his own drawings and organisms.
    - Its important that not all species can e.g just eat grass. At a certain
        size, perhaps its required to eat other animals. That way, the game
        ensures that you need to start with smaller species before you can
        create bigger ones.
    - In practice, the player will se that species die and rotten if the
        food supply runs out. He should consider adding animals that eats
        cadavers to not let them lie around for too long.
    - An organism will belong to the teretory (type) where the player
        creates it. A property can decide to which degree is wanderers
        from this location / type.
    - At this point, not sure if random mixing of organisms, or evolution,
        should be a part of the game. Perhaps this could be non-creative
        mode, that (vicious) permutations occur that will eat too much
        food of its kind, unbalancing the ecosystem. 

Game v.2.1
    - Base organisms only need sunlight and water. This is always satisfied.
        - Such organisms can never move on their own. But they will
            spread. How fast they spread depends on the size. Any organism
            can in theory either spread by air, water, dropping or
            help from other organisms. But perhaps this should be hidden
            to not make things too complex.
        - Base organism will belong to either land, water or air. Evolution
            / level up can change or add more habitats later.
        - Water should e.g contain plankton/algae before the player
            can create worms that eat them. Before he creates fish that eat the
            worms.
        - Note that a fish can only be created by evolving e.g a worm. When a fish
            gets bigger, it will need more food, and typically eat other organisms.
            So in order for the eco system to grow, several organisms must evolve
            in parallell.
        - Canibalism is allowed, and can create interresting scenarios.
        - The size of an organism will impact how fast it can reproduce / spread.
            The larger the organism, the slower. Better access to food can
            speed up the process, so it becomes a relative ratio.
        - The game could start with letter you create small species, perhaps
            worms and beetles. He can create as many variants / permutations he wants
            from an already made organism. As soon as one line of permution reach a
            certain population, the player can choose to advance it (evolution). E.g
            make it bigger, add another body part, make it smarter, change food
            dependecies. Each organism will have its own evolution level and evolution
            tree. In the end, really high level organisms can be more abstract things
            like robots, cars, UFOs etc. And they still follow the same rules when
            it comes to hunt and eat etc.
         - To be able to ride an organism, the organism must have passed a certain
            brain level (the player must upgrade it several times). At the same time,
            the organism must be larger than the player / avatar. If the avatar is
            bigger, the organism will try to move, but will be uncontrollable.
         - The reason why riding organisms is good, is that this will make the player
            move quicker around looking for misformed / evil permutations.

Game v.1.1
         - Another name suggestion: Nutty
            - the farmer should look a bit like a nutty professor.
         - There is a farm, which is where you start
            - The player don't build the farm, its there from before.
            - The farm is sourrounded by desert
                - desert spreads very slowly, but at the same time, is
                    also always winning against other kind of lands. So
                    it cannot be left untreated.
         - The world is divided into many "separate" ecosystems, each
            being big enough to hold a small forrest. Each system should
            be irregurarly perlin shaped. The user cannot control the
            shapes, but can control the contents inside the shapes (like
              move trees around etc). But the user will need to place
              the starting soil on a subsystem to convert it from desert.
              All subsystems with the same base soil will mirror each
              others ecosystem. Only top predators will be able to
              move and feed across subsystems. If a subsystem is not
              sustainable, it will slowly decay back to desert.
          - Toppredators
                - Don't have anyone eating them
                - But can run into a fight with other toppredators competing
                    for the same subsystem. They never die from this, but
                    will run and be gone for a day or two. Which can
                    cause subsystems to be unstable.
                - Can only araise from organisms with high IQ, size and speed
                - The user will need to assign them manually to the
                    subsystems they should take care of
                - They will only eat one organim per day, and never
                    two days in a row from the same system.
                - The player may therefore need to assing several
                    top predators to the same systems, to ensure
                    that the systems are drained from top organisms.
                - They die from age, but then cubs take over.
          - Without top predators, the subsystems will produce giant
            vicious beasts from the systems top predators that will
            cause trouble if the farmer tries to pass through the
            subsystem. They will cause trouble for neighbouring
            systems, that will throw them off balance and cause
            them to decay to desert.
              
         - The barn has e.g five 'evolution' containers.
         - The farmer must go into the world to collect organisms and
            bring them back the farm to evolve them.
            - He can do two things:
                1. clone the organism to create a new branch / type
                2. change / evolve the current organism / type
            - When the farmer sows the type on a piece of land, an evolved
                type will replace the old type. A clone will add another
                type to the land, as if it had nothing todo with the
                type it was cloned from. And as always, the change will
                be mirrored to all lands of the same ground type.
            - To sow an organism, the player will need to go out in the
                world, find the prey that the new organism should eat, and
                release it on it. He can do this on any kind of organism,
                bigger or smaller. And he can do it several times on
                differen preys. The latter would mean that the same
                organism can eat several kinds of food.
                    - This will create a prey-predator tree. It should be
                        possible for the user to show the tree to get
                        a current overview.
         - To collect an organism, the farmer needs to take a cell sample
            that can be brought back to the frame to brew a new egg from.
         - To be able to take a sample, the farmer must either sneak up
            on the organsim, or chase it down. If he can touch it, he can
            take a sample.
         - Upon touching, he can also choose to win him over as a follower.
            He must then either charm it, which is harder the higher IQ
            of the organism compared to farmer level. Or he can choose to
            ride him. Both can be determined using a skyrim lock-picking
            kind of UI. Strong but dump organisms yields for charmings,
            Weak but smart yields for riding.
         - As an alternative, the farmer can choose to sneak up on the
            organism instead. If successful he can take a sample, but
            not take it as follower.
         - Charmed organisms can also be taken as followers.
         - Before he starts to brew an egg, he needs to decice how to
            evolve/upgrade the organism (size, limbs, IQ, he can both add or
            remove to e.g correct earlier mistakes). The higher the
            level of the species, the more advanced limbs/IQ to choose
            from (e.g eyes, wings, able to be ridden etc, more clever
            at fighting. Each upgrade type as individual evolution level).
         - The egg will then start brewing, and the farmer will be
            noticed when ready. The higher the evolution level, the
            longer the time. Two eggs will be produced, one male and
            one female. If the farmer only chooses one, only one species
            will ever exists for that exact type. If he chooses two and
            crack them close, they will spread according to their
            size and other characteristics.
         - Plants will become sexless seads instead of eggs. They spread
            automatically. You don't need to go through the barn/lab
            to plant them (unless you want to evolve/change them).
            At a certain EQ level, a plant becomes an animal.
         - When done, he can take the egg and crack it wherever he
            likes in the world. The new organism then starts its life
            as a docile baby. In case of a dangerous creature, this will let
            the farmer get away. It could also be so that the farmer
            can only collect grown-up species.
         - Everything the farmer sows should start small, and then 
            1. spread
            2. grow
            How fast is spreads should be an evolution property. Some trees
            spreads a lot, others more sparse. The higher the IQ, the more
            it takes to spread it. Alternatively, how fast it spreads depends
            on the amount of food available. Some lands can contain more
            nutrition than others, e.g forrest. Desert would be low.
            Grass, flowers, trees should also grow and spread.
         - A point of the game is for the player to make sure that he
            creates organisms that eat another types population to control the
            spreading; Try to balance the biotai so it becomes sustainable (Lotka-volterra). 
            - The spreading can perhaps be contained inside a perlin region
                expecially for organisms with 0 IQ (grass/trees).
            - If the organism is allowed to grow too big, it will leave its
                natural habitat, and start to feed on anything around it. And
                it will prefer sources that are likely
                to contain much food. E.g a mosquito will start to feed on
                sheeps, horses, even the farmer. This will cause problems
                for the eco-system, and will create a negative ripple effect
                that needs to be stopped.
                As an organim grow big, they will be fewer. So if an organism
                becomes big and vicious, the farmer should be able to manually
                kill them all with the use of a follower. The reason for being
                able to do this, is to not make the game too hard. Restoring
                balance after terminating a line of organisms can be difficult
                enough. If killing all orgaisms on a land type, it will be mirrored
                for all similar land types. Perhaps the first land type the player
                encounters that have the big size problem will produce the over
                grown organism. All other mirrored land types will stay on the
                level before.
                Update: the farmer should create a virus instead (or perhaps he
                  always carry such a virus). The virus will, when dropped on
                    an organism, kill all organisms of the type rather quick.
            - You should be able to sow several types, like trees, grass, dogs
                inside the same perlin region. More massive/intelligent organisms
                will be preferred (trees should win over grass).
                - living / moving organisms, like animals, will have bigger habitats
                    that smaller organisms.
                - If the habitat doesn't have enough food, the organism will not
                    reproduce. If still not enough food, it will die out.
                - If the habitat contains too much food, it will reproduce a lot, and
                    the organisms will grow big, if not eaten by predators. If they
                    pass a certain size threshold, they will leave their habitat and
                    start feeding on anything in a vicious manner.
         - When sowing organisms, in the game you choose a habitat. But the player is
            actually choosing a land type, so all habitats with the same type
            will be mirrored. If he wan't a difference, he must evolve different
            land ground. Default is just plain soil / water / rock / sand.
         - It should be very visible for the player if a land type is in balance or
            not. You tap on a land to get the status, and a clear indication if
            some organisms is not taken care of.
         - A point of the game is that the world is almost a big desert
            and your first task is to stop the desert from eating up the farm. This
            gives a nice closure at the start, the farmer cannot wander to far into
            the desert, or he'll die.  So he needs to sow grass, turning desert into
            grasslands. The grasslands will introduce the first species, which can be worms
            beetles, spiders etc. And if not taken care of, they will eat up the grass
            and take the game back to start (desert). The organisms will now also be
            big (depending on the amount of food that they had), and perhaps leave the
            grass and come up the farm and attack if big enough. Otherwise they will die
            out (and rotten). The point here is that the player needs to start evolving
            organisms that eat the worms before this happens.
                Update: The player should put soil on the desert. Dirt will naturally
                produce grass, flowers, worms.
         - There needs to be a limit how many
                types of organsims one type of land / soil can carry. The reason is
                to force the player to generate different kids of soil, and as such,
                ecosystems.
         - Since there is a type count per soil, there will always be some top pray
            without a predator. The way to accomodate this, is to create a neighbour
            ecosystem (or animals that crosses ecosystems) that will eat the top
            preys.
         - Whenever he puts a certain type of soil onto a land, the whole
                    ecosystem will follow along. As such, all land that has the
                    same ground soil will have the same ecosystem mirrored.
            - He can place soil per land square, or a random splash.
         - The player should be able to explicily add and remove
            trees/grass/flowers etc wherever he likes, if the ground allowes it.
            To shape the environment. Just because it becomes more creative that way.
         - The farmer must watch out for permutations. He has no guns
            etc (perhaps only a pitchfork). But he can take one or two
            aninals as followers that will protect him. If one of the
            followers is KIA, the permutation temporarily runs away. 
         - The farmer can work 247, but at night:
            1. Organisms are easier to sneak up on
            2. But harder to charm / ride.
            3. And permutations are stronger and in greater numbers.
            4. The farmer can skip night by going inside the house, at
                which it swithces to next day immediatly (and he is
                healed of any damage, the same with followers).

v.1.2
---------------
    - The farm is mostly sourrounded by desert. And out in the world lies many
        perils; dark woods, swamps, mountains etc. And they contain dangerous
        creatures. The desert is mostly just around the farm, and a few spots
        here and there in the world. It needs to be taken care of otherwise it
        will overtake the farm, which ends the game early.
    - For this to be a game, the other perils in the world needs to evolve too.
        They start off slow, but will create big and vicious organisms that
        comes out at night and attack the farm. The farm can stand smaller attacks
        (end heal in the morning), but will not stand hordes of beasts.
    - A first, the player needs to create small ecosystems where there is desert.
        He puts soil on the ground, and create/sow grass, trees, flowers etc.
    - But the real point of the ecosystems are to create a breeding ground for
        animals that can be used to protect the farm from the perils in
        the world. And important here is that a single ecosystem can either
        end up with a specie that has high IQ, is fast or is big and strong.
        But not all at the same time. In pratice the player will control
        the ecosystem from which organisms he breed there. It will become a
        hierarchy where each level will be either a bit smarter, stronger, contain
        more eyes or limbs, or be faster than the level below. There can be a
        lot to choose from. And at the top of the food chain there will be a
        top predator (level 0 - p0).
    - The hierarchy can only be a fixed
        number of levels high (e.g five). Some perks might require a lot of
        different vegetables, other will have few. Some might need very colorful
        bugs, big trees, small bushes etc. None of the species will ever leave
        the subsystem. When an ecosystem has filled up the hierarchy, the desert
        cannot overrun it.
    - At the level above the ecosystems comes predators (p1) that can wander around and
        feed on toppreys from several different ecosystems. Those animals will inherit the
        perks of the prey the feed. The user must therefore choose which subsystems
        the animals belong to, and how they mix the perks from the toppredators
        in the ecosystems.
    - In theory, the player can create more layers on top of this again
        that feeds on p2 etc. Since a p1 requires e.g three ecosystems to exist, it
        means that a p3, if he needs three p2s to exist, you need nine
        ecosystems. 

v.3
    - The game begins with the farm being sourrounded by a world filled with different
        kinds of beatiful lands; forrests, swamps, meadows, waters, etc. And each piece
        of land (not too big) contains a new varity of bugs and organisms.
    - The challende is that all those small species will grow bigger and bigger. And
        become dangerous and attack the farmers animals that wanders around feeding.
        The farmers animals will reproduce, but at some point the rate of attacks will
        outnumber the reproduction. And the game will move to an end.
    - The farmer will therefore need to take advantage of the different ecosystems already
        out there, and produce new organisms that can live side by side with the
        preditors, and take them out.
    - He can produce new kind of organisms in his farm by taking cell samples from any
        kind of species out there and mix them, two and two. He can choose which
        parts to mix, but only one thing at a time (legs, teeth, eyes, IQ, size, etc).
        And he also needs to choose what pray the new specious predates. The new species
        will turn into an egg he can crack wherever he likes, but of course it makes most
        sense to do it in the habitat of the species he needs to conquer. After a new
        specious is created, the samples will be used up, and he will need to go out and
        get new ones (including the one he just created, to further evolve it).
    - To take a cell sample, he will need to sneak up on the organism.
    - The fun part of the game will be to walk around in the world, sneak up on species,
        take samples, and mix new species from the samples back at the farm. And then
        redraw their appearance, and later release them back into the world.
    - If a new species completly removes its prey, they will take over the role of the
        prey and become a new threat that grows and becomes vicious. So the farmer should
        not create predators that becomes too strong, or otherwise he'll bring the
        ecosystem out of balance and just create new and more dangerous threats.

Game v.4
---------------
    - The game is only about creativety. No ecosystems.
    - Still, the game has a house that acts as a staring point. The game will let you
        create other houses as well.
    - Genereate a prebuild world with grass, flowers, trees etc. The player can walk
        around and add or remove anything he sees.
    - Perhaps he should be able to raise or lower the ground, and specify ground type; mud, grass, stone, water, moutainrock.
        - The player walks around and draws the flora and fauna. No restrictions regarding size etc. 
        - The user can draw any kind of drawings, which should be "body" parts.
        - He can then compose a character by putting together body / construction parts freely.
        - Then he spesifies what the character is most like; human, dog, bird, balloon, car,
            cloud, house, fence, spider, grass, tree, etc.
            - note that specifying the type should be independent of how it is composed. Altough
                the game can by default suggest the releated character template.
                This means that you can have a charater that looks like a shark, but acts as a balloon.
        - Then he specifies a few charaterisics; nice-agressive, restless-lazy, fast-slow, etc.
            This goes for all types, even trees or houses.
        - He can then spawn the character in the world wherever he likes, or do an auto spread.
        - And thats it. This way the player can build his own dream world consisting
            of his own trees, flowers and animals, perhaps even fences, houses, cars etc.
        - The player can interact with all character types. Cars can be driven, houses can be
            slept in, birds, horses, any kind of animal can be ridden if its big enough, dogs
            will be charming and playful, guns can be fired, trees and grass will sway in the wind.
        - The player can tell characters to stay together; an agressive monkey can have a pig as a pet, and carry a banana or a gun.

Game v4.1
-----------------
    - The game consist of a premade world
    Creative mode:
    ---------------
    - The player can create organisms at will, no restrictions
    - But, all available organisms has a template with a set of
        drawings the user must draw. E.g a dog will have four
        drawings; Head, body leg, tail. Each drawing is prefilled
        with default drawing, making it easy to change. He can
        just flick and draw between the drawings until he is satisfied.
        - And the user will give all new organisms a personality.
    - I can generate a whole lot of such templates, orgnisms with one
        leg, two legs, four legs, eight legs etc. Trees, flowers...
    - In creative, the user creates individual organisms, no reproduction or predators.
    Game mode:
    ----------
    - The player must find a real instance of a template in the landscape
        (sneak/attack, and take a sample) before he can create his own variants.
    - All new organisms must have a preferred food source. They can be either vegan or
        non-vegan. The player go out in the world where he wants the organism to
        live, and place the egg. An non-vegan organism will only attack smaller
        organims, but always prefer one than is almost as big as itself.
     - If a predator runs out of food, it will turn agressive, and will start eating
        non-vegan food and also do canibalism. And the world will slowly decay.
     - The bigger the organism, the more space it needs (that is, two organisms
        can stay close as long as there is some free room sourrounding them).
        Otherwise they start to fight. E.g a hurd of horses can be close, but
        they need a lot of space around them. The more agressive, the more
        space they need.
    - An organism feeds and reproduces according to his size. Small organism have
        a high rate, large a low rate. If there is not a balance of predators and
        preys, a specie will reproduce too much, and cause the land to overflow
        with it like a virus.
    - If two organisms feed on the same pray (e.g grass, trees), organims that are
        more agressive will dominate a bit more.
    - The game is balanced at start, and the user starts by sampling an organism
        and creaing his first permutation.
    - When creating a template permuation, he can choose to increase or decrease
        size a tiny bit. That way, organims can grow huge after hours of playtime.
        After creating a new species, it will become a new template that needs to
        be sampled to be able to further increase it's size.
    - Other metrics, such as personality settings, can also be adjusted a bit for
        each permutation. That is, an organism cannot be converted from evil to nice
        in just one permutation.
    - Also flowers and trees can be agressive. They will try to hit the farmer when
        he walks by. A flower that is nice will instead lean forward for a hug.
    - Some organisms/templates are only available at certain times. E.g zombies comes
        up from the ground close to swamps only at full moon etc.

Game v5.
    - Drawing game
    - The user can choose from premade templates, and draw objects that he can place
        in the world and interact with.
    - This way he can draw his own world consisting of his own flora, fauna and objects.
    - He should be able to create annotations in the landscape for use as memory map, which
        is a bit hidden point; being able to create a virutal world where you can store
        and organize information.
    - All objects, plants, animals, cars, will have a
        1. personality
        2. strength
        3. life
        4. Type. The type is by default the same as the template. But it would be fun
            if you could e.g draw a car template, but use a bird type. Then you have
            flying cars (the spin their weels when flying instead of flapping their wings).
        Agressive objects will attack other objects (that can move, including the player), and perhaps
        kill them if they are agressive enough, and their strength is greater. In that case, the
        killed object will just respawn some minutes later at the place where the player
        first created them. The player is by default quite strong, but can also pick up
        weapons and armour. How fast an object dies depends on its life. Each time the object
        gets hit by something, some life will drain depending on the impact.

    - This system should be in place first, before I even consider more about evolution and
        game aspects.

    Technical approach:
        - Each tile in the world has a list of objects in contains. When drawing the tile
            it should just draw the objects. Adding or removing objects would be as simple
            as adding removing objects from the list.
         - I need three lists, one with dynamic objects that needs to be ticked, and
            one with static objects. The third is for pregenerated objects that has been removed. 
                - Tiles that are left behind from the tile engine needs to be persisted
                    somehow, the same way tiles that enter the engine must be loaded.
                - This means that I need a separate world-tile matrix that keeps track
                    of all objects, with embedded loading/saving mechanisms. The tiles that
                    are drawn will just fetch the list of objects from this structure.
                - This will be the UI independend data model. The UI tile engine should
                    have the same tile size as the data model, so the list of objects is
                    1-1. If needed, object culling should be done in the UI tile.
                - An object in the list can also be a "remove" instuction. So we don't have
                    to prefill the object list with auto generated trees and grass, but
                    instead just mark them as removed when the user removes them.
        - Implement point and spawn functionallity for trees from within the game.
        - Implement save and restore functionallity early on. This will for sure save me
            time later.
        - Hardcode dog template.
        - Because of behaviour differences, it might be worthwile to let animals
            that looks similar but act different be different templates. E.g a stag will
            use his antlers while fighting, a dog will not.

Game v6
---------------
    - Dumb farmer, or crashed space ship (or perhaps noahs spaceship ark)
    - He has a set of blueprints (makes sense with noahs ark)
    - He has some food and water in the beginning, but he will run out of
        this after some time. So the initial point of the game is to start
        create basic blueprints which can grow vegetables and worms for
        him to eat. But this will attract foes from the forrest, which
        will compete for the food. So he will need to create better
        shelter and animals that can protect him and other animals he creates.
    - Either: each blueprint requires has a required dna. Noah needs to
        go out on the planet and take cell samples of everything
        he sees to find missing dna parts so he can reconstruct
        a blueprint. The dna parts are colors, so its easy to
        spot which dna it contains.
    - Or more simple: Each blueprint requires a set of different colors.
        The more advanced an organism is, the more colors needed.
    - But animals created will need to feed, so he will need to start
        lower in the food chain. Otherwise the animal will die out (or
        perhaps he should not be allowed to create one in the first
        place).
    - So:
        - all templates available in the farm / ship.
        - he need to start at the bottom of the food chain. He cannot change prey / predator
            relationships, but he can change personality.
        - go around sample cells / dna / colors. A sample can only be used once.
    - The world is filled with perils. Some colors are only carried by
        big / dangerous creatures, and he needs help from created animals to
        take them out (by growing them bigger than the prey. Perhaps the amount
          of food available can determine the size in the end).
    - He can farm colors. E.g create grass flowers with different sampled colors and
        sow them close to the farm for easy access.
    - every blueprint instance becomes either a seed or an egg that will grow when
        sowed. At any time ha can harwest it and use it
            - animals become followers
            - trees, grass etc can be used to build shelter. Note that a tree is
                abstract. It will look like whatever the player draws it to be
                when fully grown. So it might end up looking like a door or a
                bus sign. But also a tree is the food chain, and will depend on
                e.g grass, dirt, beetles, worms, which is at the bottom.

Game v7
    - You're (probably) the only one left after earth being hit by a meteor
    - You have an farm/mancave/lab where you can do gene manipulation
    - chickens and ostriches are running around, but perhaps as mutants.
    - He has some food and water in the beginning, but he will run out of this after some time.
    - The world is burned and destoryed, and dead organisms lies spread here
        and there. Each organism contains a part of the original dna that
        the player can sample. When he has collected the full dna, he can
        go back to the lab and recreate the organism.
    - But he also need eggs where the dna can be insaminated. The player will need
        to catch a chicken (and kill it) each time he wants an egg cell. Later he
        can choose to farm a chicken garden for more easy access. Bigger animals might require
        e.g ostrich eggs, but an ostrich is much harder to catch.
    - For an animal to reproduce, the player will need to create a male and a female.
    - The world is full of perils and mutants, so it will be hard to move
        too far without companion animals he creates that can do the fighting, or
        hold them at a distance while the player escapes. The mutants can be
        random permutation of fossils and the species drawn by the user.
    - If the player places an egg in an uncleared habitat, it will become a zombie.
    - The player can also find destroyed objects, like cars, baloons, torches
        in the world. They all contain one piece that is not broken out of many. As
        soon as he have all pieces, he can assemble it.
        - Perhaps also guns, bow and arrow etc. But if he shoots a
            bullet, he will need to find new bullets. There is a short supply.
    - The game is about restoring the world in general, and the area around the
        mancave/farm in particular. He will convert an ashgray and dead world
        into something colorful and alive.
    - The more complex the organism, the more parts the dna consist of. And one
        dead organism contains only one part of it (which is random).
    - It should be easy to recreate grass and flowers, their dna should be only
        a handful parts. And then he can sow them around the farm. This can be
        the starting ground for more complex organisms, like worms, beetles, trees etc.
    - So the initial point of the game is to start
        create basic food which can grow vegetables and worms for
        him to eat. But this will attract foes from the world, which
        will compete for the food. So he will need to create better
        shelter and animals that can protect him and other animals he creates.
    - The sky is clouded, except where the player has planted living organisms and
        reach a certain level that has produces a sustaining ecosystem (trees, worms etc).
        This will make the skye blue, be a source of food and water, and the sun will shine trough.
    - Whereever the sky is blue, it will be safe to linger and sleep.
    - The lower a species is on the food chain, the more ofter you will find them
        as "fossils" in the landscape.
    - The farmer will need to recreate the food chain for an animal to survive.
        Otherwise it will die. But in that case, sampling dna from the dead animal
        is simple, so he should be up'n'running quite quick.
    - When sampling a dna, you will know it's prey. But perhaps only one level. So
        it becomes a puzzle on its own to recreate the food chain hierarchy.
    - Bigger animals (horses, cows etc) need it's own territory to force the player
        to clear more land. Perhaps this can be ensured through the food chain.

Technical
---------------
    - lodding: it makes sense to use more vertices for a model if it results in less
        fragments being drawn when an object is near. The amount of fragments "skipped" will
        be large compared to the number of extra vertices to calulate. But when the object
        is far away, it might be different. Since then, the number of fragments drawn on screen
        will anyway be quite small. So then its perhaps better to reduce the number of vertices
        and "overdraw" fragments instead?
        Because of this, deciding whether or not to switch to lod1 should depend on how many
        vertices lod0 contains. If it contains e.g less than 50 (or less than lod0), it
        will most likely don't give any speed-up.

    - for Z faces, ensure we create one large rect instead of one rect per line

    - remove clamp rect. Instead, store voxel coordinate (atlas pixel pos) in each vertex.
        - When collapsing vertices, check both vertex position and voxel position. This will
            ensure that vertices that are in between two voxels will map to only one of them.
        - Assign voxel pos to f2s variable. This will then interpolate between the vertices
            and automatically create a clamp rect.
    - far lod: draw quad with six vertices with small bend
        - fake depth shade in fragment shader, but only
            as much so there are no glitches.
        - If easily possible, try fill in the corner gaps.
    - Check if I can apply gradient only if the result is going in the same direction
        as lightning, and skip otherwise
    - Calculate effective size for objects, and limit shading range to it.
    - Collapse two adjacent cubes along y-axis in a single object into one.
    - In each cube, for each vertex on either bottom left or top right, add
        a color number telling in which direction opaque pixels can be found in
        all directions around the cube. A color value should be either -1 or 1.
        Other "unused" vertices uses the number 0. When a triangle is interpolated, only
        the dominant corner will be used, and I should be able to read out if a
        color value is above or below 0.

    - send pixel from both scripts. Send uvZ from both scripts. Then they should produce the
        same data.
    - Figure out why uv clamping based on pixel is not accurate.
    - See if I can calculate normals in VC script the same way as in VQ script

    - Copy atlas to Color32
    - Change simplified to create several faces when not using volume

OPTIMIZATIONS
-------------
    - Copy atlas to Color32
    - Tranform vertices directly when creating mesh, instead of when combining them
    - Preallocate memory for mesh factory
    - Preallocate one big chunk of memory, and give it to factory when creating mesh.
        Use this to combine meshes directly in factory instead of creating many meshes
        and cominding them in the end. This the factory is static, this allocation could
        be done only once, at startup.
    - build meshes in separate thread.
    - For volume mesh, draw horisontal/vertical quads as minimal as possible (not always 0->subImageWidth)

LANDSCAPE
------------
    - Generate island instead of infinite landscape
        - I want a closed eco system
        - I want to keep track of individual organisms

    - Create a 2d array (worldmap) containing all squares on the map. Each square
        will be a struct describing height and type, and the organisms it
        contains. And for sure more info later. 
    - Then populate the worldmap with landscape type. Start with types that are
        less inclinded to adapt to its surroundings. Subsequent types need to
        analyze the current worldmap when adding its own layer.
    - Start with land and sea, this will make out the shape of the island. The
        land should be completly flat at this point. Other layers will add in
        heights.
    - Add a mountain range. I don't want mountains to dominate, so a single
        mountain should be enough. Perhaps use fractals instead of perlin here.
    - Add hills to the landscape. Hills can not overwrite moutains, but otherwise
        they will make out the base heights through out the land. Try to change
        the scale dynamically, so that some hills will be long and flat, while
        others will be more bumpy.
    - Add lakes. A Lake will need to stay within the base height of the hill
        sourrounding it. So find a spot, analyze it, and fill it with
        water (alternatively, let everything below a height of 0 be lake).
    - Add rivers. Only rivers that end up intersecting with a lake will be used.
        Lakes can only flow downwards or straight, so it takes some analyzing.

    2.
    - A layer will consist of two samples; frequency and detail.
        - Frequency will specify where in the world the layer will draw.
            This will typically be a highly scaled perlin where we
            we only accept high values (close to 1) as being an acceptable.
            This should scatter the layer out on case we only want to
            rarily draw the layer, like for mountains.
        - The second will detail the contents of the individual islands
            from the first sample. This sample will use a more low scaled
            perlin that add in detail, like mountain tops etc.
        - Just be looking the final result of the sampling we know if the
            layer covers a specic position or not. If it covers it, we can
            go on finding the height. The height should be a merge of all
            the layer samples, so that in the end, the layer fades out
            at the edge of the frequency sample.
        - Note that using two sampled / octaves will produce layer islands
            that are smooth and rounded. One could add more samples to
            break it up even more. One could also use only the first two
            samples to determine the height, while use more samples to
            determine the type (in case of subtypes).
        - If it turns out that the layer does not cover a position, we continue
            with the next layer in the priority chain. This also means that
            the next layer in the chain will never be able to overwrite the
            layers before it.
        - TODO: create a gameoject "LandscapeLayer" that encompasses the above
            with sliders etc. And then a parent gameobject that can contain
            many such layers, with the first child having the highest priority.
            The parent can also have a scale that all the child layers listen
            to, to make it easy to scale things as a whole.

    
